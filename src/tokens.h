#ifndef TOKENS_H
#define TOKENS_H

#include "symbol_table.h"
#include "ast.h"

typedef int token_t;

/** Token Definitions - defined by parser.y **/
#include "y.tab.h"

/** Token Names **/

#define TNAME_ID                          "id"
#define TNAME_INTEGER_LITERAL             "integer"
#define TNAME_REAL_LITERAL                "real"
#define TNAME_STRING_LITERAL              "string"
#define TNAME_COMMA                       "','"
#define TNAME_COLON                       "':'"
#define TNAME_SEMICOLON                   "';'"
#define TNAME_LEFT_PARENTHESIS            "'('"
#define TNAME_RIGHT_PARENTHESIS           "')'"
#define TNAME_LEFT_SQUARE_BRACKET         "'['"
#define TNAME_RIGHT_SQUARE_BRACKET        "']'"
#define TNAME_LEFT_BRACKET                "'{'"
#define TNAME_RIGHT_BRACKET               "'}'"
#define TNAME_OP_ADDITION                  "'+'"
#define TNAME_OP_SUBTRACTION               "'-'"
#define TNAME_OP_DIVISION                  "'/'"
#define TNAME_OP_MULTIPLICATION            "'*'"
#define TNAME_OP_REMAINDER                 "'^'"
#define TNAME_OP_EXPONENTIATION            "'%'"
#define TNAME_OP_EQUAL_TO                  "'=='"
#define TNAME_OP_NOT_EQUAL_TO              "'!='"
#define TNAME_OP_GREATER_THAN              "'>'"
#define TNAME_OP_LESS_THAN                 "'<'"
#define TNAME_OP_GREATER_THAN_OR_EQUAL_TO  "'>='"
#define TNAME_OP_LESS_THAN_OR_EQUAL_TO     "'<='"
#define TNAME_OP_LOGICAL_AND               "'&&'"
#define TNAME_OP_LOGICAL_OR                "'||'"
#define TNAME_OP_LOGICAL_NOT               "'!'"
#define TNAME_OP_ASSIGNMENT                "'='"
#define TNAME_OP_ADDITION_ASSIGNMENT       "'+='"
#define TNAME_OP_SUBTRACTION_ASSIGNMENT    "'-='"
#define TNAME_OP_MULTIPLICATION_ASSIGNMENT "'*='"
#define TNAME_OP_DIVISION_ASSIGNMENT       "'/='"
#define TNAME_KW_BOOL                      "BOOL"
#define TNAME_KW_BREAK                     "BREAK"
#define TNAME_KW_CASE                      "CASE"
#define TNAME_KW_CONST                     "CONST"
#define TNAME_KW_CONTINUE                  "CONTINUE"
#define TNAME_KW_DEFAULT                   "DEFAULT"
#define TNAME_KW_ELSE                      "ELSE"
#define TNAME_KW_FALSE                     "FALSE"
#define TNAME_KW_FOR                       "FOR"
#define TNAME_KW_FUNC                      "FUNC"
#define TNAME_KW_GO                        "GO"
#define TNAME_KW_IF                        "IF"
#define TNAME_KW_IMPORT                    "IMPORT"
#define TNAME_KW_INT                       "INT"
#define TNAME_KW_NIL                       "NIL"
#define TNAME_KW_PRINT                     "PRINT"
#define TNAME_KW_PRINTLN                   "PRINTLN"
#define TNAME_KW_REAL                      "REAL"
#define TNAME_KW_RETURN                    "RETURN"
#define TNAME_KW_STRING                    "STRING"
#define TNAME_KW_STRUCT                    "STRUCT"
#define TNAME_KW_SWITCH                    "SWITCH"
#define TNAME_KW_TRUE                      "TRUE"
#define TNAME_KW_TYPE                      "TYPE"
#define TNAME_KW_VAR                       "VAR"
#define TNAME_KW_VOID                      "VOID"
#define TNAME_KW_WHILE                     "WHILE"

const char* get_token_name(token_t token);

#endif
